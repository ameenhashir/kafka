
Emergence of Bigdata - A Quick Recap

BigData Challenges

1. Data collection - web crawlers
2. Data Storage - 
3. Data Processing - apply page rank algorithm
4. Data Access - oragnize the result support speed queriy support

- Volumne
- Velocity
- Variety


Google Solution solution for big data (for google search engine)
	- Google File system
	- Map Reduce
	- Google big Data
	
Hadoop - batch processing - data collected and stored in distributed system and batch processing is done

Real Time Processing - Kafka Steam/spark streaming/Apache flink/apache storm

------------------------------------
Conception of Event Streams

Events - 
	Identify and Model events
		--Assume retail Business
			-Actor
			-Action - generate and events
			-ex:Invoce generated by POS 
			-- Capture event - JSON object
	Stream Events		
		--Series of events called stream
	Transport events
		--Transport to area of processing
		-- ex: invoice - shipment - analystic
		-- Cannot process everything in one place		
	Processing Events
		-- ex.compute rewards
		-- payment - OTP
		
Event is nothing but a business acitivty that is captured as data object
Ex.Envoice generation trigger an event,which is model as JSON and transported to target systems.

-------------------------------------------------
Setup Kafka Cluster

1. Java 8
2. Installing Single Node Kafka
		- open Source - Apache Kafka
		- Commercial Distribution - https://www.confluent.io/
		- Managed Services - confluent,amazon,aiven.io
		
we use Commercial Distribution - confluet.io mostly in production which community version is free.
confluet.io --> download community edition

-- start single node kafka cluster
	- 2 step process
			1)Start zookeeper server [zookeeper-server-start.bat etc\kafka\zookeeper.properties]
				Error :
				Classpath is empty. Please build the project first e.g. by running 'gradlew jarAll'
				
				open kafka-run-class.bat
				search text "classpath addition for core"
				copy past content above the line:
				
				rem Classpath addition for LSB style path
				if exist "%BASE_DIR%\share\java\kafka\*" (
					call :concat "%BASE_DIR%\share\java\kafka\*"
				)
			
			2)Start Kafka Broker [kafka-server-start.bat etc\kafka\server.properties]	
	
3. Maven
4. Intellij
-------------------------------------------------
Realtime Stream Processing Use Cases

Catagories where stream processing is used
	- Incremental ETL
	- Real Time Reporting -- Dashboards and Reports
	- Real Time Alerting -- 
	- Real Time decision Making and ML -- (fraud detection/real time clinical measurement/real time bidding/personalized  customer experiance)
	- Online Machine Learing and AI -- 
	
-------------------------------------------------
Real-time Streaming Challenges
	-- Model Events ( JSON/AVRO)
	-- Trasport Events 
	-- Process in RealTime
	
----------------------------------------------
Real-time Streaming Design Consideration

	- Time sensitivity
	- Decoupling
	- Data format evolution
	- Reliability
	- Scalability
	
Design
 - Shared Database
 - RPC/RMI
 - File Tranfer
 - Messaging 
	-- point to Point (ptp) 
	-- publish/subscribe (pubsub)
			- publisher (producers)
			- subscriber (consumer)
			- broker ( receive messages from publishers and storing them to log file and sending to subscribers)
			- topic (tablename - or namespace) - message namespace.catagorise messages.
				-- producer write the messages to a topic and consumer reads from topic

Apache Kafka adopts PubSub Messaging architecture.

----------------------------------------------
Section 3: Enter the world of Apache Kafka
-----------------------------------------------

 What is Apache Kafka?
 
 Apache Kafka is a horizontally scalable,fault tolerent,distributed streaming platform.
 
 --Kafka Storage Architecture
 --Kafka Cluster Architecture
 --Work Distribution Architecture
 
 ------------------------------------------
 Kafka Storage Architecture
 
 Topics - Log File - Partitions - replicas - segments
 
 kafka-topics.bat --create --zookeeper localhost:2181 --topic invoice --partitions 5 --replication-factor 3 --config segment.bytes=1000000
 
 command creates a topic named invoice and with 5 partitions and
 with 3 replicas

	--Leader partition
	--follower partition
	
--Offset - 64 bit integer is unique towards a parition

topic	
	- replica0
		- partition0
			-log segment0
			-log segment<offset>
			-log segment1<offset>
		- partition1
		- partition2
		- partition3
		- partition4
	- replica1
		- partition0
		- partition1
		- partition2
		- partition3
		- partition4
	- replica2
		- partition0
		- partition1
		- partition2
		- partition3
		- partition4
	
	
To locate a specific message
	1. Topic Name
	2. Partition Number
	3. Offset Number
	
Stream processing application needs to read all messages in a sequence.

To help broker rapidly find a message for a given offset , kafka create offset index , stored in parition directly along with log segment

Time Index : Read all events created after a specific timestamp
			Kakfa creates timestamp for each message.Builds time index and , stored in parition directly along with log segment
			
-----------------------------
Kafka Cluster Architecture

Kafka Broker are configured to form a broker.
A group of Borkers that work together to share work load

	- Cluster membership (zookeeper)
	- Administrative tasks (controller)

Kafka is master less cluster
It uses zookeeper to maintian list of active borkers
/borkers/ids -- folder keeps the list of active brokers in zookeeper

----------------------------------------------
Kafka Work Distribution Architecture - Part 1

1. Partitions - Log files
2. Cluster Formation

Partition Assigment:

Assume 6 brokers in 2 racks ( 3 in each rack)
replication factor 3 - to total 30 replicas to be distributed amoung 6 nodes

Steps 	1.Ordered List of Brokers
			R1-B0
			R2-B3
			R1-B1
			R2-B4
			R1-B2
			R2-B5
		
		2.Leader and Follower Assigment
		
REP1	REP2	REP3	|	Brokers		|	LEADERS		|	FollowerS	|	FollowerS
P0		P0		P0		|      R1-B0    |     P0  P6    |       P5      |		P4
P1      P1      P1		|      R2-B3    |     P1  P7    |   P0  P6      |       P5
P2      P2      P2		|      R1-B1    |     P2  P8    |   P1  P7      |	P0  P6
P3      P3      P3		|      R2-B4    |     P3  P9    |   P2  P8      |   P1  P7
P4      P4      P4		|      R1-B2    |     P4        |   P3  P9      |   P2  P8
P5      P5      P5		|      R2-B5    |     P5        |   P4          |   P3  P9
P6      P6      P6		|  
P7      P7      P7		|  
P8      P8      P8		|  
P9      P9      P9		|  

---------------------------------------------------
